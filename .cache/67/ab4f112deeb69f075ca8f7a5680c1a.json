{"id":"../node_modules/jikanjs/lib/util/Request.js","dependencies":[{"name":"D:\\Code\\keyx\\package.json","includedInParent":true,"mtime":1604260325553},{"name":"D:\\Code\\keyx\\node_modules\\jikanjs\\package.json","includedInParent":true,"mtime":1604260325532},{"name":"./Settings","loc":{"line":3,"column":25},"parent":"D:\\Code\\keyx\\node_modules\\jikanjs\\lib\\util\\Request.js","resolved":"D:\\Code\\keyx\\node_modules\\jikanjs\\lib\\util\\Settings.js"},{"name":"cross-fetch","loc":{"line":4,"column":22},"parent":"D:\\Code\\keyx\\node_modules\\jikanjs\\lib\\util\\Request.js","resolved":"D:\\Code\\keyx\\node_modules\\cross-fetch\\dist\\browser-ponyfill.js"}],"generated":{"js":"//@ts-check\r\n\r\nconst Settings = require('./Settings');\r\nconst fetch = require('cross-fetch');\r\n\r\nclass Request {\r\n\r\n    /**\r\n     * sends a request with the given list of URL parts and the optional list of query parameter\r\n     * @param {*[]} args           URL Parts\r\n     * @param {{}} [parameter]     Query Parameter\r\n     * @returns {Promise<*>} returns the request response or an error\r\n     */\r\n    async send(args, parameter) {\r\n        var response = await fetch(this.urlBuilder(args, parameter));\r\n        var data = await response.json();\r\n\r\n        if (response.status !== 200) return Promise.reject(new Error(data.error));\r\n        return Promise.resolve(data);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*[]} args            URL Parts\r\n     * @param {{}} [parameter]      Query Parameter\r\n     * @returns {string}            URL\r\n     */\r\n    urlBuilder(args, parameter) {\r\n        var url = new URL(Settings.getBaseURL());\r\n\r\n        url.pathname += '/' + args.filter(x => x).join('/');\r\n        if (parameter) Object.entries(parameter).forEach(([key, value]) => url.searchParams.append(key, value));\r\n\r\n        return url.href;\r\n    }\r\n}\r\n\r\nmodule.exports = Request;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/jikanjs/lib/util/Request.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"../node_modules/jikanjs/lib/util/Request.js":"//@ts-check\r\n\r\nconst Settings = require('./Settings');\r\nconst fetch = require('cross-fetch');\r\n\r\nclass Request {\r\n\r\n    /**\r\n     * sends a request with the given list of URL parts and the optional list of query parameter\r\n     * @param {*[]} args           URL Parts\r\n     * @param {{}} [parameter]     Query Parameter\r\n     * @returns {Promise<*>} returns the request response or an error\r\n     */\r\n    async send(args, parameter) {\r\n        var response = await fetch(this.urlBuilder(args, parameter));\r\n        var data = await response.json();\r\n\r\n        if (response.status !== 200) return Promise.reject(new Error(data.error));\r\n        return Promise.resolve(data);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*[]} args            URL Parts\r\n     * @param {{}} [parameter]      Query Parameter\r\n     * @returns {string}            URL\r\n     */\r\n    urlBuilder(args, parameter) {\r\n        var url = new URL(Settings.getBaseURL());\r\n\r\n        url.pathname += '/' + args.filter(x => x).join('/');\r\n        if (parameter) Object.entries(parameter).forEach(([key, value]) => url.searchParams.append(key, value));\r\n\r\n        return url.href;\r\n    }\r\n}\r\n\r\nmodule.exports = Request;\r\n"},"lineCount":39}},"error":null,"hash":"8b5c19869dc1af5dc86f99f3534147d1","cacheData":{"env":{}}}